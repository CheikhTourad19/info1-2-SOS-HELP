{% extends 'medecin/base.medecin.html.twig' %}

{% block content %}
    <div class="max-w-2xl mx-auto px-4 py-8 space-y-6">
        <!-- Post Card -->
        <div class="bg-white rounded-xl shadow-sm overflow-hidden border border-gray-100 hover:shadow-md transition-shadow duration-300">
            <!-- Post Header -->
            <div class="p-5 flex items-center space-x-3">
                <div class="h-10 w-10 rounded-full bg-gradient-to-br from-indigo-100 to-purple-100 flex items-center justify-center text-indigo-600 font-bold shadow-inner">
                    {{ post.author.firstname|first|upper }}
                </div>
                <div class="flex-1 min-w-0">
                    <h3 class="font-semibold text-gray-900 truncate">{{ post.author.firstname }} {{ post.author.lastname }}</h3>
                    <p class="text-xs text-gray-500">{{ post.createdAt|date('M d, Y Â· h:i A') }}</p>
                </div>
            </div>

            <!-- Post Content -->
            <div class="px-5 pb-4">
                <h2 class="font-bold text-xl mb-2 text-gray-800">{{ post.title }}</h2>
                <p class="text-gray-700 whitespace-pre-line leading-relaxed">{{ post.content }}</p>

                {% if post.images|length > 0 %}
                    <div class="mt-6">
                        <h3 class="text-sm font-medium text-gray-700 mb-3">Images</h3>

                        <!-- Image Slider -->
                        <div
                                x-data="{
                            // Images array
                            images: [
                              {% for image in post.images %}
                                '{{ image.url }}'{% if not loop.last %},{% endif %}
                              {% endfor %}
                            ],
                
                            // Image Slider options
                            arrowsNavigation: true,
                            dotsNavigation: true,
                            transition: 'fade', // '' for no transition, 'fade', 'slide', 'blur-sm'
                            loop: true,
                            autoplay: false,
                            autoplayDuration: 3000,
                            autoplayProgressBar: false,
                
                            // Helpers
                            currentIndex: 0,
                            autoplayInterval: null,
                            autoplayTimer: null,
                            autoplayProgress: 0,
                
                            // Initialization
                            init() {
                              // Start all autoplay intervals
                              this.startAutoplayInterval('all');
                            },
                
                            // Display specific image
                            set(index, from) {
                              // Check that the index is valid
                              if (index > -1 && index < this.images.length) {
                                // The image is after current one
                                if (index > this.currentIndex) {
                                  this.currentIndex = index;
                
                                  // If we are already in the last image and loop is disabled
                                  if (!this.loop && this.currentIndex === this.images.length - 1) {
                                    // Reset all autoplay intervals and stop
                                    this.resetAutoplayInterval('all');
                                  } else {
                                    // If it is triggered by the navigation button
                                    if (from === 'button') {
                                      // Reset all autoplay interval and restart them
                                      this.resetAutoplayInterval('all', true);
                                    } else {
                                      // Reset autoplay timer interval and restart it
                                      this.resetAutoplayInterval('timer', true);
                                    }
                                  }
                                } else if (index < this.currentIndex) { // Else if the image is before current one
                                  this.currentIndex = index;
                
                                  // If it is triggered by the navigation button
                                  if (from === 'button') {
                                    // Reset all autoplay interval and restart them
                                    this.resetAutoplayInterval('all', true);
                                  } else {
                                    // Reset autoplay timer interval and restart it
                                    this.resetAutoplayInterval('timer', true);
                                  }
                                }
                              }
                            },
                
                            // Display next image
                            next(from) {
                              // Stop the carousel loop when reaching the last image if loop is disabled
                              if (!this.loop && this.currentIndex === this.images.length - 1) {
                                return;
                              }
                
                              // Go to next image
                              this.set((this.currentIndex + 1) % this.images.length, from);
                            },
                
                            // Display previous image
                            previous(from) {
                              // Stop the carousel loop when reaching the first image if loop is disabled
                              if (!this.loop && this.currentIndex === 0) {
                                return;
                              }
                
                              // Go to previous image
                              this.set((this.currentIndex - 1 + this.images.length) % this.images.length, from);
                            },
                
                            // Start autoplay interval
                            startAutoplayInterval(mode) {
                              if (this.autoplay && (mode === 'all' || mode === 'interval')) {
                                this.autoplayInterval = setInterval(() => this.next(), this.autoplayDuration);
                              }
                
                              if (this.autoplay && this.autoplayProgressBar && (mode === 'all' || mode === 'timer')) {
                                this.autoplayProgressBar = false;
                                this.autoplayProgress = 0;
                                this.autoplayProgressBar = true;
                
                                this.autoplayTimer = setInterval(() => {
                                  this.autoplayProgress += 100 / (this.autoplayDuration / 100);
                                }, 100);
                              }
                            },
                
                            // Reset autoplay timer
                            resetAutoplayInterval(mode, restart) {
                              if (this.autoplay && (mode === 'all' || mode === 'interval')) {
                                clearInterval(this.autoplayInterval);
                
                                if (restart && mode === 'interval') {
                                  this.startAutoplayInterval('interval');
                                }
                              }
                
                              if (this.autoplay && this.autoplayProgressBar && (mode === 'all' || mode === 'timer')) {
                                clearInterval(this.autoplayTimer);
                                
                                if (restart && mode === 'timer') {
                                  this.startAutoplayInterval('timer');
                                } else if (!restart) {
                                  this.autoplayProgressBar = false;
                                  this.autoplayProgress = 0;
                                  this.autoplayProgressBar = true;
                                }
                              }
                
                              if (restart && mode === 'all') {
                                this.startAutoplayInterval('all');
                              }
                            },
                          }"
                                class="mx-auto w-full max-w-xl"
                        >
                            <!-- Image Slider Container -->
                            <div
                                    class="relative overflow-hidden rounded-lg focus:outline-hidden focus-visible:ring-4 focus-visible:ring-indigo-400/60"
                                    tabindex="0"
                                    x-on:keyup.right="next('button')"
                                    x-on:keyup.left="previous('button')"
                            >
                                <!-- Images -->
                                <div
                                        class="aspect-video"
                                        role="region"
                                        aria-roledescription="carousel"
                                        aria-label="Galerie d'images"
                                >
                                    <template x-for="(image, index) in images" x-bind:key="index">
                                        <img
                                                x-bind:src="image"
                                                x-bind:alt="`Image ${index + 1}`"
                                                class="absolute start-0 top-0 h-full w-full object-cover"
                                                x-bind:class="{
                                    'transition duration-300 ease-in-out will-change-auto': transition,
                                    'z-1': currentIndex === index,
                                    'hidden': !transition && currentIndex !== index,
                                    'opacity-100': (transition === 'fade' || transition === 'blur-sm')  && currentIndex === index,
                                    'opacity-0 invisible': transition === 'fade' && currentIndex !== index,
                                    'blur-xl opacity-0': transition === 'blur-sm' && currentIndex !== index,
                                    'translate-x-0': transition === 'slide' && currentIndex === index,
                                    '-translate-x-full': transition === 'slide' && currentIndex > index,
                                    'translate-x-full': transition === 'slide' && currentIndex < index
                                  }"
                                                role="group"
                                                aria-roledescription="slide"
                                                x-bind:aria-label="`Image slide ${index + 1} of ${images.length}`"
                                                x-bind:aria-hidden="currentIndex !== index"
                                        />
                                    </template>
                                </div>
                                <!-- END Images -->

                                <!-- Previous Button -->
                                <button
                                        x-cloak
                                        x-show="arrowsNavigation && !(!loop && currentIndex === 0)"
                                        x-on:click="previous('button')"
                                        type="button"
                                        class="group absolute -start-1 top-1/2 z-10 flex -translate-y-1/2 items-center rounded-e-md bg-zinc-900/60 py-5 ps-3 pe-2 text-white backdrop-blur-xs transition duration-150 ease-out hover:start-0 hover:bg-zinc-900/90 active:bg-zinc-900/75"
                                        aria-label="Image prÃ©cÃ©dente"
                                >
                                    <svg
                                            xmlns="http://www.w3.org/2000/svg"
                                            viewBox="0 0 20 20"
                                            fill="currentColor"
                                            class="hi-mini hi-chevron-left inline-block size-5 rtl:rotate-180"
                                    >
                                        <path
                                                fill-rule="evenodd"
                                                d="M11.78 5.22a.75.75 0 0 1 0 1.06L8.06 10l3.72 3.72a.75.75 0 1 1-1.06 1.06l-4.25-4.25a.75.75 0 0 1 0-1.06l4.25-4.25a.75.75 0 0 1 1.06 0Z"
                                                clip-rule="evenodd"
                                        />
                                    </svg>
                                    <span class="sr-only">PrÃ©cÃ©dent</span>
                                </button>
                                <!-- END Previous Button -->

                                <!-- Next Button -->
                                <button
                                        x-cloak
                                        x-show="arrowsNavigation && !(!loop && currentIndex === images.length - 1)"
                                        x-on:click="next('button')"
                                        type="button"
                                        class="group absolute -end-1 top-1/2 z-10 flex -translate-y-1/2 items-center rounded-s-md bg-zinc-900/60 py-5 ps-2 pe-3 text-white backdrop-blur-xs transition duration-150 ease-out hover:end-0 hover:bg-zinc-900/90 active:bg-zinc-900/75"
                                        aria-label="Image suivante"
                                >
                                    <svg
                                            xmlns="http://www.w3.org/2000/svg"
                                            viewBox="0 0 20 20"
                                            fill="currentColor"
                                            class="hi-mini hi-chevron-right inline-block size-5 rtl:rotate-180"
                                    >
                                        <path
                                                fill-rule="evenodd"
                                                d="M8.22 5.22a.75.75 0 0 1 1.06 0l4.25 4.25a.75.75 0 0 1 0 1.06l-4.25 4.25a.75.75 0 0 1-1.06-1.06L11.94 10 8.22 6.28a.75.75 0 0 1 0-1.06Z"
                                                clip-rule="evenodd"
                                        />
                                    </svg>
                                    <span class="sr-only">Suivant</span>
                                </button>
                                <!-- END Next Button -->

                                <!-- Progress Bar -->
                                <div
                                        x-cloak
                                        x-show="autoplayProgressBar"
                                        class="absolute inset-x-0 bottom-0 z-10 h-1 w-full overflow-hidden"
                                        role="progressbar"
                                        aria-valuemin="0"
                                        aria-valuemax="100"
                                        x-bind:aria-valuenow="Math.round(autoplayProgress)"
                                        x-bind:aria-valuetext="`${Math.round(autoplayProgress)}% progression vers la prochaine image`"
                                >
                                    <div
                                            class="h-full bg-indigo-500 transition-all duration-100 ease-linear"
                                            :style="{ width: `${autoplayProgress}%` }"
                                    ></div>
                                </div>
                                <!-- END Progress Bar -->
                            </div>
                            <!-- END Image Slider Container -->

                            <!-- Miniatures de navigation -->
                            <div class="mt-4 flex overflow-x-auto space-x-2 pb-2">
                                {% for image in post.images %}
                                    <div
                                            class="flex-shrink-0 w-16 h-16 rounded-md overflow-hidden cursor-pointer transition-all duration-200"
                                            :class="{'ring-2 ring-indigo-500': currentIndex === {{ loop.index0 }}}"
                                            @click="set({{ loop.index0 }}, 'button')"
                                    >
                                        <img src="{{ image.url }}" alt="Miniature {{ loop.index }}" class="w-full h-full object-cover">
                                    </div>
                                {% endfor %}
                            </div>
                        </div>
                        <!-- END Image Slider -->
                    </div>
                {% endif %}

                {% if post.documents|length > 0 %}
                    <div class="mt-6">
                        <h3 class="text-sm font-medium text-gray-700 mb-3">Documents</h3>
                        <div class="flex flex-wrap gap-3">
                            {% for document in post.documents %}
                                <a href="{{ document.url }}" target="_blank" class="inline-flex items-center px-4 py-2 bg-gray-100 hover:bg-gray-200 text-gray-700 rounded-lg transition-colors duration-200">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z" />
                                    </svg>
                                    <span>Document PDF</span>
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
                                    </svg>
                                </a>
                            {% endfor %}
                        </div>
                    </div>
                {% endif %}
            </div>

            <!-- Post Stats -->
            <div class="px-5 py-3 border-t border-gray-100 bg-gray-50/50 flex items-center text-sm text-gray-500 space-x-4">
                <span class="flex items-center">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" />
                    </svg>
                    {{ post.comments|length }} {{ post.comments|length == 1 ? 'commentaire' : 'commentaires' }}
                </span>
            </div>
        </div>

        <!-- Comment Form -->
        <div class="bg-white rounded-xl shadow-sm overflow-hidden p-5 border border-gray-100">
            <h3 class="font-medium text-lg text-gray-800 mb-4 flex items-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-indigo-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z" />
                </svg>
                Ajouter un commentaire
            </h3>
            {{ form_start(commentForm, {'attr': {'class': 'space-y-4'}}) }}
            {{ form_widget(commentForm.content, {'attr': {
                'class': 'w-full px-4 py-3 rounded-lg border border-gray-200 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition duration-200 placeholder-gray-400',
                'placeholder': 'Ãcrivez votre commentaire ici...',
                'rows': 3
            }}) }}
            <button type="submit" class="inline-flex items-center px-4 py-2.5 bg-gradient-to-br from-indigo-600 to-purple-600 hover:from-indigo-700 hover:to-purple-700 text-white font-medium rounded-lg shadow-sm hover:shadow-md transition-all duration-200">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 5l7 7-7 7M5 5l7 7-7 7" />
                </svg>
                Publier
            </button>
            {{ form_end(commentForm) }}
        </div>

        <!-- Comments Section -->
        <div class="space-y-5">
            <h3 class="font-semibold text-lg text-gray-800 flex items-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-indigo-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8h2a2 2 0 012 2v6a2 2 0 01-2 2h-2v4l-4-4H9a1.994 1.994 0 01-1.414-.586m0 0L11 14h4a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2v4l.586-.586z" />
                </svg>
                Commentaires
                <span class="ml-2 bg-indigo-100 text-indigo-800 text-xs font-medium px-2.5 py-0.5 rounded-full">{{ post.comments|length }}</span>
            </h3>

            {% if post.comments|length > 0 %}
                <div class="space-y-4">
                    {% for comment in post.comments %}
                        <div id="comment-{{ comment.id }}" class="bg-white rounded-xl shadow-xs p-4 border border-gray-100 hover:border-gray-200 transition-colors duration-200">
                            <!-- Main Comment -->
                            <div class="flex space-x-3">
                                <div class="flex-shrink-0 h-9 w-9 rounded-full bg-gradient-to-br from-indigo-50 to-purple-50 flex items-center justify-center text-indigo-500 text-sm font-bold shadow-inner">
                                    {{ comment.author.firstname|first|upper }}
                                </div>
                                <div class="flex-1 min-w-0">
                                    <div class="flex items-baseline justify-between">
                                        <div>
                                            <h4 class="font-medium text-gray-900">{{ comment.author.firstname }}</h4>
                                            <span class="text-xs text-gray-500">{{ comment.createdAt|date('M d, Y Â· h:i A') }}</span>
                                        </div>
                                    </div>
                                    <p class="mt-2 text-gray-700">{{ comment.content }}</p>

                                    <!-- Reply Toggle -->
                                    <button onclick="toggleReplyForm('reply-form-{{ comment.id }}')"
                                            class="mt-2 inline-flex items-center text-sm text-indigo-600 hover:text-indigo-800 font-medium transition-colors duration-150">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6" />
                                        </svg>
                                        RÃ©pondre
                                    </button>
                                </div>
                            </div>

                            <!-- Reply Form (Hidden by Default) -->
                            <div id="reply-form-{{ comment.id }}" class="hidden mt-4 pl-12">
                                {{ form_start(replyForms[comment.id], {
                                    'attr': {'class': 'space-y-3'},
                                    'action': path('app_reply_add', {'commentId': comment.id})
                                }) }}
                                {{ form_widget(replyForms[comment.id].content, {'attr': {
                                    'class': 'w-full px-4 py-2 text-sm rounded-lg border border-gray-200 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition duration-200 placeholder-gray-400',
                                    'placeholder': 'Ãcrivez votre rÃ©ponse ici...',
                                    'rows': 2
                                }}) }}
                                <div class="flex justify-end">
                                    <button type="submit" class="inline-flex items-center px-3 py-1.5 bg-indigo-600 hover:bg-indigo-700 text-white text-sm font-medium rounded-lg shadow-sm hover:shadow-md transition-all duration-200">
                                        Envoyer
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 5l7 7-7 7M5 5l7 7-7 7" />
                                        </svg>
                                    </button>
                                </div>
                                {{ form_end(replyForms[comment.id]) }}
                            </div>

                            <!-- Replies Section -->
                            {% if comment.replies|length > 0 %}
                                <div class="mt-4 space-y-3 pl-12">
                                    {% for reply in comment.replies %}
                                        <div class="bg-gray-50/70 rounded-lg p-3 transition-all duration-200 hover:bg-gray-50">
                                            <div class="flex space-x-2">
                                                <div class="flex-shrink-0 h-7 w-7 rounded-full bg-indigo-100 flex items-center justify-center text-indigo-500 text-xs shadow-inner">
                                                    {{ reply.author.firstname|first|upper }}
                                                </div>
                                                <div class="flex-1 min-w-0">
                                                    <div class="flex items-baseline justify-between">
                                                        <span class="text-xs font-medium text-gray-900">{{ reply.author.firstname }}</span>
                                                        <span class="text-xs text-gray-400">{{ reply.createdAt|date('M d, Y Â· h:i A') }}</span>
                                                    </div>
                                                    <p class="mt-1 text-xs text-gray-700">{{ reply.content }}</p>
                                                </div>
                                            </div>
                                        </div>
                                    {% endfor %}
                                </div>
                            {% endif %}
                        </div>
                    {% endfor %}
                </div>
            {% else %}
                <div class="text-center py-8">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 mx-auto text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" />
                    </svg>
                    <h4 class="mt-3 text-gray-500 font-medium">Aucun commentaire pour le moment</h4>
                    <p class="mt-1 text-gray-400 text-sm">Soyez le premier Ã  commenter cette publication</p>
                </div>
            {% endif %}
        </div>
    </div>

    <script>
        function toggleReplyForm(formId) {
            const form = document.getElementById(formId);
            form.classList.toggle('hidden');
            form.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
        }
    </script>
{% endblock %}